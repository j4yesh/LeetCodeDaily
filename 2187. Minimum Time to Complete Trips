class Solution {
private:
    long long name(vector<int>&time,int ind){
        long long cnt=0;
        for(int i=0;i<time.size();i++){
            cnt+=(ind/time[i]);
        }
        return cnt;
    }
public:
    long long minimumTime(vector<int>& time, int totalTrips) {
        long long cnt=0;
        sort(time.begin(),time.end());
        long long low = 0;
        long long high = 1LL*time[time.size()-1]*totalTrips;
        long long mintime = 1LL*time[time.size()-1]*totalTrips;
        cout<<"badshah: "<< name(time,5)<<"\n";
         long long mid;
        while(low<high){
            mid=(low+high)/2;

            long long cnt=0;
        for(int i=0;i<time.size();i++){
            cnt+=(mid/time[i]);
        }

            if(cnt>=totalTrips){
                mintime = min(mintime,  mid);
                high=mid;
            }
            else{
                low=mid+1;
            }
        }
        return mintime;
    }
};
