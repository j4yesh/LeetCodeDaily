class Solution {
private: 
    void heapify(vector<int>&nums,int n,int i){
        int largest=i;
        int l=2*i+1;
        int r=2*i+2;
        if(l<n && nums[l]>nums[largest]){
            largest=l;
        }
        if(r<n && nums[r]>nums[largest]){
            largest=r;
        }
        if(largest!=i){
            swap(nums[largest],nums[i]);
            heapify(nums,n,largest);
        }
    }
    void buildheap(vector<int>&a,int n){
    for(int i=n/2-1;i>=0;i--){
        heapify(a,n,i);
    }
    for(int i=n-1;i>0;i--){
        swap(a[i],a[0]);
        heapify(a,i,0);
    }
    }
public:
    vector<int> sortArray(vector<int>& nums) {
        int n=nums.size();
        buildheap(nums,n);
        return nums;
    }
};
